{
    "version": "0.1",
    "pageContent": 
	{
        "_comments": "object that contains data for page labels, buttons, etc.",
        "navItems": 
		{
            "_common": 
			{
                "buttonBackToGallery": 
				{
                    "name": "Back To Gallery",
					"method": "backToGallery()",
					"idName": "backToGallery"	
                },
                "buttonStartTutorial": 
				{
                    "name": "Start Tutorial",
					"method": "startTutorialFromDetailsScreen()",
					"idName": "startTutorial"
                },
				"buttonViewDetails": 
				{
                    "name": "View Details",
					"method": "viewDetails()",
					"idName": "stepsViewDetails"	
                }
            }
        }
    },
    "tutorial": 
	{
        "_common": 
		{
            "name": "File - Using the FileExists node and the FileIterator node together in a message flow",
            "shortDescription": "Learn how to use the FileIterator node to iterate over file listings generated by the FileExists node (requires v12.0.6.0 or higher)",
            "durationText": "This tutorial takes approximately",
            "durationTime": "10 minutes",
            "_resourceToOpenComment": "The ID of the first resource to open when the user imports the tutorial. Resource IDs are defined in the repo_metadata.json Tutorials listing on ot4i.",
            "resourceToOpen": "MainFlow",
            "helpLink": 
			{
                "text": "IBM Documentation",
           		"link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/acesw_home.html"
            }
        },
        "pageDetails": 
		{
            "topicsName": "Tutorial topics",
            "_topicListComment": "A short list of product concepts or tasks demonstrated by this tutorial",
            "topicList": 
			[
                {
                    "title": "FileIterator node"
                }
            ],
            "outcomesName": "Learning outcomes",
            "_outcomesComment": "A description of what the user will have learned or accomplished by running this tutorial.",
            "outcomeList": 
			[
                {
                    "title": "Use IBM App Connect Enterprise to trigger a message flow based upon the discovery of a list of files in a local directory, which are then processed one at a time using the File Iterator node."
                }
            ],
            "summary": 
			{
                "overviewName": "OVERVIEW",
                "_overviewComment": "A short description of what happens in this tutorial, and an optional short explanation of the ACE concepts used in this tutorial if necessary for context. What background knowledge must the user have for this to make sense?",
                "sections": 
				[
                    {
                        "section": "This tutorial demonstrates how the File Exists node can be used with its List mode property in order to discover meta-data about a list of files which are discovered in an input directory. This information is sent downstream to later nodes in the flow. The File Iterator node is used to loop over the list of files, and for each entry in the list propagates a LocalEnvironment that is compatible with driving the behaviour of a subsequent FileRead node to read and parse that specific file. The File Iterator node allows each file to be processed one at a time. If an exception occurs for a particular propagation, the exception is stored, and the remaining file entries are processed to completion. In the provided example, a Filter node is used after the File Iterator node to determine whether the file was last modified before today. If the file was last modified before today then the Filter node propagates down its True terminal and after logging some information using the node Trace2, the file will be deleted.  If the file was last modified today, then the Filter node propagates down its False terminal and the File Read node will parse the file and log its contents using the node Trace3."
                    },
                    {
                        "section": "This tutorial provides an application to hold the message flow, and three input files. There are no other pre-requisites needed by the scenario."
                    }
                ]
            },
			"helpLinks": 
			{
				"_helpLinksComment": "Helplinks that have a type:web attribute are rendered as web links. Otherwise, links are assumed to be to embedded Help topics in the Knowledge Center.",
				"title": "Find out more",
				"details": 
				[
					{
						"title": "IBM Documentation link to ",
						"description": "Developing integration solutions from scratch",
						"link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/bi12002_.htm",
						"type": "web"
					}
				]
			}
        },
        "pageSteps": 
		{
            "create": 
			{
                "overview": 
				{
                    "name": "Create",
                    "heading": "Import projects",
                    "_createComment": "A description of what will happen when the user clicks Import.",
                    "sections": 
					[
                        {
                            "section": "When you click Import, one project will be created in your workspace: An application named <span class='application'>ExampleFileIterator</span>"
                        },
                        {
                            "section": "<span class='application'>ExampleFileIterator</span> provides a single message flow named <span class='application'>ExampleFileIteratorFlow</span> which uses a File Exists node to poll a directory and triggers the message flow when it notices that files have arrived.   The files themselves are not parsed, but information about them is propagated through the flow. Downstream, the File Iterator node will loop over the provided list of files and will use the time when each file was last modified to determine whether or not to parse the data content of the file before deleting it. The following descriptions summarize the functionality of each message flow node:"							
                        },
                        { 
                        	"section":"<span class='uicontrol'>File Exists</span>: A FileExists node that triggers the flow when it notices that one or more files have been written to a directory which it is polling on a 20 second interval."
                        },
						{ 
                        	"section":"<span class='uicontrol'>Trace1</span>: A Trace node which saves the LocalEnvironment which was generated by the prior File Exists node (with List mode turned on)"
                        },
                        { 
                        	"section":"<span class='uicontrol'>File Iterator</span>: A File Iterator node that loops over the list of files which were discovered by the File Exists node."
                        },
						{ 
                        	"section":"<span class='uicontrol'>Filter</span>: A Filter node that compares the time when the file was last modified to today's date."
                        },
						{ 
                        	"section":"<span class='uicontrol'>Trace2</span>: A Trace node which records the timestamp information used in the Filter node before the file is deleted by the message flow."
                        },
						{ 
                        	"section":"<span class='uicontrol'>File Read</span>: A File Read node that parses the content of the file."
                        },
						{ 
                        	"section":"<span class='uicontrol'>Trace3</span>: A Trace node that records the content of the file which was just parsed, before the file is deleted by the message flow."
                        },
                        {
			    			"section": "Once imported using the link on the right, the provided project is ready to be deployed and tested. The rest of these instructions will describe how to do this using the Toolkit's built-in Flow Exerciser."
						}
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "IBM Documentation link to ",
                            "description": "Developing integration solutions from scratch",
                            "link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/bi12002_.htm",
							"type": "web"
                        },
						{
                            "title": "IBM Documentation link to ",
                            "description": "FileExists node",
                            "link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=nodes-fileexists-node",
							"type": "web"
                        },
                        {
                            "title": "IBM Documentation link to ",
                            "description": "FileIterator node",
                            "link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=nodes-fileiterator-node",
							"type": "web"
                        }
						
                    ]
                },
                "actions": 
				{
                    "title": "Create Actions",
                    "details": 
					[
                        {
                            "name": "Import",
                            "method": "importArtifacts()"
                        }
                    ]
                }
            },
            "prepare": 
			{
                "overview": 
				{
                    "name": "Prepare",
                    "heading": "The following steps help you to prepare your environment ready for running the message flow.",
                    "_prepareComment": "A description of what just happened when the user clicked Import, and what will happen when the user clicks Deploy.",
                    "sections": [
				    {
                       "section":"<b>Create an Integration Server</b>",
						  "steps":
                        {
                          "type": "ordered",
                          "details":
                          [
                            {
                                "details": "From the Integration Explorer view in the bottom left corner of the Toolkit, right-click the Integration Servers folder and select the option to <span class='uicontrol'>Create a local integration server</span>. Leave all the options with their default values and click Finish. The local Integration Server will be started, using a project in your Toolkit's workspace as the work directory. Click OK to dismiss the Success dialog. "
                            }
						  ]
						}
					},
					{
                       "section":"<b>Create a temporary directory and configure the message flow's trace nodes</b>",
						  "steps":
                        {
                          "type": "ordered",
                          "details":
                          [
                             {
                                 "details": "The message flow includes three trace nodes (named Trace1, Trace2 and Trace3) which are currently configured to write their trace files to the directory named <code>C:\\temp\\FileIterator\\Traces</code>. Make sure this temporary directory exists, or update the message flow nodes' properties to point to a different file location."
                                             }
						  ]
						}
					},
					{
                       "section":"<b>Create the directory which the FileExists node will poll</b>",
						  "steps":
                        {
                          "type": "ordered",
                          "details":
                          [
                             {
                                 "details": "On Windows: Create the directory <code>C:\\temp\\FileIterator\\Input</code>."
                                             },
                                             {
                                 "details": "On Linux: Create a suitable directory such as <code>/tmp/FileIterator/Input</code> and change the Input directory property of the FileExists node accordingly to point to the same directory."
                                             }
						  ]
						}
					}
             ]
                },
                "helpLinks": 
				{
                }
            },
            "run": 
			{
                "overview": 
				{
                    "name": "Run",
                    "heading": "",
                    "_runComment": "The full steps for the user to run through the tutorial. Use 'sections' to render paragraphs, 'steps' with a type of 'ordered' or 'unordered' to render HTML lists, and 'substeps' to render nested lists.",
                "sections":[                            
                            {
                                "section": "<h4>Use the Flow Exerciser to test the tutorial scenario",
                                "steps": {
                                    "type": "ordered",
                                    "details": [                                      
                                    {
                                        "details": "Open <span class='resource'>ExampleFileIteratorFlow.msgflow</span> and click the Flow Exerciser icon <img src='http://ot4i.github.io/ot4i.tutorials//dist/images/icons/iib/startFlowExerciser.png' alt='' /> to start testing the flow (if you have already deployed the flow you will be asked whether you want to redeploy it which should only be necessary if you have subsequently changed the flow since it was last deployed)."
                                        },
                                        {
                                            "details": "For convenience three input messages have been provided, which have been stored inside the <span class='resource'>ExampleFileIterator</span> application project. The last modified times of these files were earlier in time (from when this tutorial was written, which happens to have been in September 2022) than the current date on which you are now reading this tutorial. Open one of the files, for example <code>Fruit2.txt</code>. You will find the content of the file is:<code>{&quot;Fruit&quot;:&quot;ORANGES&quot;}</code>. Change the file content to be <code>{&quot;Fruit&quot;:&quot;STRAWBERRIES&quot;}</code>"											
										},
										{										
										  "details": "Copy the three provided files <code>Fruit1.txt</code>, <code>Fruit2.txt</code> and <code>Fruit3.txt</code> from <code>&lt;Integration Toolkit workspace&gt;/ExampleFileIterator</code> and paste them all at once into the input directory that you created on your file system earlier (by default <code>C:\\temp\\FileIterator\\Input</code>). The polling interval of the FileExists node is set to 5 seconds so you may have a short pause before the files have been processed."
										},										                                        
										{
										 "details":"In the Flow Exerciser toolbar, click the View Path icon <img src='http://ot4i.github.io/iib-tutorials/images/icons/iib/viewPath.png' alt='View path' /> to highlight the message path through the message flow. You should see that there have been two propagations which passed out of the True terminal of the Filter node into Trace2. There will be one propagation (relating to the file which you editted earlier in the tutorial - on today's date!) which passed out of the False terminal of the Filter node into the FileRead and then on into Trace3. Check out the trace files which have been written by Trace2 and Trace3. <code>Trace2.txt</code> will have content like this:<br><br><code>===== 2022-09-29 23:23:48.371834  =====<br>The message flow is not going to bother reading and parsing the file 'Fruit1.txt'<br>The file 'Fruit1.txt' had a LastModified timestamp of GMTTIMESTAMP '2022-09-29 22:04:00.619'<br>The current timestamp is 2022-09-29 23:23:48.371834<br>The file 'Fruit1.txt' was last modified before today and so will just be deleted by the message flow.<br><br><br>===== 2022-09-29 23:23:48.376716  =====<br>The message flow is not going to bother reading and parsing the file 'Fruit3.txt'<br>The file 'Fruit3.txt' had a LastModified timestamp of GMTTIMESTAMP '2022-09-29 22:04:14.739'<br>The current timestamp is 2022-09-29 23:23:48.376716<br>The file 'Fruit3.txt' was last modified before today and so will just be deleted by the message flow.</code><br><br><code>Trace3.txt</code> will have content like this:<br><br><code></code>===== 2022-09-29 23:19:46.838665 =====<br>The file 'Fruit2.txt' has been parsed and contained the following data:<br>'STRAWBERRIES'"
										}										
                                        ]
                                    }
                            }

                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "IBM Documentation link to ",
                            "description": "FileExists node",
                            "link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=nodes-fileexists-node",
							"type": "web"
                        },
                        {
                            "title": "IBM Documentation link to ",
                            "description": "Testing your message flow by using the Flow exerciser",
                            "link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/rt26110_.htm",
							"type": "web"
                        }
                    ]
                }
            }
        }
    }
}
